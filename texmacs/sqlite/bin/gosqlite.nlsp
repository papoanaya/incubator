#!/usr/bin/env newlisp
# write sqlite within the input line, 
# use as many commands as necessary, 
# divide them by the ~ chararacter, because the ENTER key terminates the input and sends it to gnuplot.
# output is the graph made by gnuplot.

(setq GNUPLOT_PATH "")
;(setq PIPE_GNUPLOT "/opt/local/bin/sqlite3 -batch ")
(setq PIPE_GNUPLOT "sqlite3 -batch ")
;;(setq PIPE_GNUPLOT "sqlite3 -html ")

# defining temporary postscript file directory

(setq TMPDIR (or (env "TMPDIR") "."))

(if (not (directory TMPDIR))
    (make-dir TMPDIR))

(setq PIPE_GNUPLOT (string PIPE_GNUPLOT " " (env "HOME") "/texmacsdb")) 


(setq DATA_BEGIN "\002")
(setq DATA_END "\005")
(setq DATA_ESCAPE "\027")

(print DATA_BEGIN)
(print "verbatim:This is a TeXmacs interface for Sqlite.")

# prompt-input-gnuplot-output loop
(while true
       (begin 
         (print DATA_BEGIN)
         (print "channel:prompt")
         (print DATA_END)
         (print "%]")
         (print DATA_END)        
         (setq input (read-line))
         (println input)
         (setq input (string  (replace "~" input "\n")))
         (write-file (string TMPDIR "/temp.sql") input)

         (print DATA_BEGIN)
         (print "verbatim:")
;         (print "html:")

         (! (string "cat " TMPDIR "/temp.sql | "  PIPE_GNUPLOT ))

         (print DATA_END)
         (delete-file (format "%s/%s" TMPDIR "temp.sql"))))

(exit)
